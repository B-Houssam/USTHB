--- Question 1 -------
CREATE TABLESPACE HOSPITAL_TBS
	DATAFILE 'C:\hospital_tbs.dat' SIZE 100M AUTOEXTEND ON ONLINE;

CREATE TEMPORARY TABLESPACE HOSPITAL_tEMPTBS 
	TEMPFILE 'C:\TEMPhospital_tbs.dat' SIZE 100M AUTOEXTEND ON;

--- Question 2 -----
CREATE USER DBAHOPITAL IDENTIFIED BY password DEFAULT TABLESPACE HOSPITAL_TBS TEMPORARY TABLESPACE HOSPITAL_tEMPTBS;

--- Question 3 ------
GRANT ALL PRIVILEGES to DBAHOPITAL;

CONNECT DBAHOPITAL /password

---- Create the tables ------
--- Question 5 -------
CREATE TABLE SERVICE (
	CODE_SERVICE VARCHAR2(3) PRIMARY KEY,
	NOM_SERVICE VARCHAR2(30) UNIQUE,
	BATIMENT VARCHAR2(1),
	DIRECTEUR NUMBER(3)
);

CREATE TABLE CHAMBRE (
	CODE_SERVICE VARCHAR2(3),
	NUM_CHAMBRE NUMBER(3),
	SURVEILLANT NUMBER(3),
	NB_LITS NUMBER(1),
	CONSTRAINT PK_CHAMBRE PRIMARY KEY (CODE_SERVICE,NUM_CHAMBRE)
);

CREATE TABLE EMPLOYE (
	NUM_EMP NUMBER(3) PRIMARY KEY,
	NOM_EMP VARCHAR2(30),
	PRENOM_EMP VARCHAR2(30),
	ADRESSE_EMP VARCHAR2(150),
	TEL_EMP VARCHAR2(10)
);

CREATE TABLE MEDECIN (
	NUM_MED NUMBER(3) PRIMARY KEY,
	SPECIALITE VARCHAR2(15),
	CONSTRAINT CONS_SPECIALITE CHECK (SPECIALITE IN ('Anesthesiste','Cardiologue','Generaliste','Orthopediste','Pneumologue','Radiologue','Traumatologue') )
);

CREATE TABLE INFIRMIER (
	NUM_INF NUMBER(3) PRIMARY KEY,
	CODE_SERVICE VARCHAR2(3),
	ROTATION VARCHAR2(4),
	SALAIRE DECIMAL(8,2),
	CONSTRAINT CONS_ROTATION CHECK (ROTATION IN ('JOUR','NUIT') )
);

CREATE TABLE PATIENT (
	NUM_PATIENT NUMBER(3) PRIMARY KEY,
	NOM_PATIENT VARCHAR2(30),
	PRENOM_PATIENT VARCHAR2(30),
	ADRESSE_PATIENT VARCHAR2(150),
	TEL_PATIENT VARCHAR2(10),
	MUTUELLE VARCHAR2(10)
);

CREATE TABLE HOSPITALISATION (
	NUM_PATIENT NUMBER(3) PRIMARY KEY,
	CODE_SERVICE VARCHAR2(3),
	NUM_CHAMBRE NUMBER(3),
	LIT NUMBER(1)
);

CREATE TABLE SOIGNE (
	NUM_PATIENT NUMBER(3),
	NUM_MED NUMBER(3),
	CONSTRAINT PK_SOIGNE PRIMARY KEY (NUM_PATIENT,NUM_MED)
);

---- Add the foreign keys --------
ALTER TABLE SERVICE ADD CONSTRAINT FK_DIRECTEUR FOREIGN KEY (DIRECTEUR) REFERENCES MEDECIN(NUM_MED);
ALTER TABLE CHAMBRE ADD CONSTRAINT FK_SURVEILLANT FOREIGN KEY (SURVEILLANT) REFERENCES INFIRMIER(NUM_INF);
ALTER TABLE MEDECIN ADD CONSTRAINT FK_MEDECIN FOREIGN KEY (NUM_MED) REFERENCES EMPLOYE(NUM_EMP);
ALTER TABLE INFIRMIER ADD CONSTRAINT FK_INFermier FOREIGN KEY (NUM_INF) REFERENCES EMPLOYE(NUM_EMP);
ALTER TABLE INFIRMIER ADD CONSTRAINT FK_SERVICE FOREIGN KEY (CODE_SERVICE) REFERENCES SERVICE(CODE_SERVICE);
ALTER TABLE HOSPITALISATION ADD CONSTRAINT FK_PATIENT FOREIGN KEY (NUM_PATIENT) REFERENCES PATIENT(NUM_PATIENT) ON DELETE CASCADE;
ALTER TABLE HOSPITALISATION ADD CONSTRAINT FK_CHAMBRE_SERVICE FOREIGN KEY (CODE_SERVICE,NUM_CHAMBRE) REFERENCES CHAMBRE(CODE_SERVICE,NUM_CHAMBRE);
ALTER TABLE SOIGNE ADD CONSTRAINT FK_PATIENT2 FOREIGN KEY (NUM_PATIENT) REFERENCES PATIENT(NUM_PATIENT) ON DELETE CASCADE;
ALTER TABLE SOIGNE ADD CONSTRAINT FK_MEDECIN2 FOREIGN KEY (NUM_MED) REFERENCES MEDECIN(NUM_MED);

--- Question 6 -----------
ALTER TABLE HOSPITALISATION ADD (Data_Host DATE);
ALTER TABLE HOSPITALISATION DROP COLUMN Data_Host;

--- Question 7 -----------
ALTER TABLE INFIRMIER ADD CONSTRAINT Salaire_null CHECK (SALAIRE IS NOT NULL);
ALTER TABLE PATIENT ADD CONSTRAINT Mutuelle_null CHECK (MUTUELLE IS NOT NULL);

--- Question 8 ----------
ALTER TABLE PATIENT MODIFY (PRENOM_PATIENT VARCHAR2(35));

--- Question 9 ----------
ALTER TABLE EMPLOYE DROP COLUMN TEL_EMP;
ALTER TABLE EMPLOYE ADD (TEL_EMP VARCHAR2(10));

--- Question 10 ----------
ALTER TABLE PATIENT RENAME COLUMN ADRESSE_PATIENT TO adr_pat;
------- Get Back The Real name back cause of the insertion -------
ALTER TABLE PATIENT RENAME COLUMN adr_pat TO ADRESSE_PATIENT;

--- Question 11 ----------
ALTER TABLE INFIRMIER ADD CONSTRAINT Salaire_10k_30k CHECK (SALAIRE BETWEEN 10000 AND 30000);

--- Question 12 ----------
ALTER TABLE MEDECIN ADD CONSTRAINT Specialite_null CHECK (SPECIALITE IS NOT NULL);

--- Question 14 ----------
UPDATE SERVICE SET DIRECTEUR = (SELECT NUM_MED FROM MEDECIN WHERE NUM_MED = (SELECT NUM_EMP FROM EMPLOYE WHERE NOM_EMP='BOULARAS' AND PRENOM_EMP='Fatima')) WHERE NOM_SERVICE='Cardiologie';

--- Question 15 ----------
ALTER TABLE INFIRMIER DISABLE CONSTRAINT Salaire_10k_30k;
UPDATE INFIRMIER SET SALAIRE = SALAIRE - 5000 WHERE ROTATION='JOUR';
ALTER TABLE INFIRMIER ENABLE CONSTRAINT Salaire_10k_30k;
-- On ne peut pas réactiver la contrainte à cause de certains infirmiers qui ont le salaire moins de 10000 mntn --

--- Question 16 ----------
DELETE FROM MEDECIN WHERE SPECIALITE='Cardiologue';
-- On ne peut pas supprimer car il existe la clé primaire comme fils dans la table soigne --
-- Pour pouvoir supprimer, on doit d'abord supprimer les fils dans les autres tables en relation --

--- Question 17 -----------
-- On crée un index sur la colonne SPECIALITE --
CREATE INDEX idx_medecin ON MEDECIN (SPECIALITE);

--- Question 18 ------------
SELECT PRENOM_PATIENT,NOM_PATIENT FROM PATIENT WHERE MUTUELLE='MAAF';

--- Question 19 ------------
SELECT LIT,NUM_CHAMBRE,NOM_SERVICE,PRENOM_PATIENT,NOM_PATIENT,MUTUELLE FROM HOSPITALISATION h, SERVICE s, PATIENT p WHERE p.MUTUELLE LIKE 'MN%'
AND s.BATIMENT='B' AND h.CODE_SERVICE=s.CODE_SERVICE AND h.NUM_PATIENT=p.NUM_PATIENT;

--- Question 20 ------------
CREATE VIEW PatMed (NUM_PATIENT,NBMED,NBSPEC) AS SELECT NUM_PATIENT,COUNT(s.NUM_MED),COUNT(DISTINCT SPECIALITE) FROM SOIGNE s, MEDECIN m WHERE s.NUM_MED=m.NUM_MED GROUP BY NUM_PATIENT;
SELECT * FROM PatMed WHERE NBMED>3;

--- Question 21 ------------
CREATE VIEW SerSal(CODE_SERVICE,SomSal,NbInf) AS SELECT CODE_SERVICE,SUM(SALAIRE),COUNT(*) FROM INFIRMIER GROUP BY CODE_SERVICE;
SELECT CODE_SERVICE,(SomSal/NbInf) FROM SerSal;
--- Question 22 ------------
CREATE VIEW SerPat(CODE_SERVICE,NbPat) AS SELECT CODE_SERVICE,COUNT(NUM_PATIENT) FROM HOSPITALISATION GROUP BY CODE_SERVICE;
CREATE VIEW SerInf(CODE_SERVICE,NbInf) AS SELECT CODE_SERVICE,COUNT(NUM_INF) FROM INFIRMIER GROUP BY CODE_SERVICE;
SELECT sp.CODE_SERVICE,NbPat,NbInf,(NbInf/NbPat) FROM SerPat sp, SerInf si WHERE sp.CODE_SERVICE=si.CODE_SERVICE;
--- Question 23 ------------
CREATE VIEW MedServ AS SELECT DISTINCT NUM_MED,CODE_SERVICE FROM SOIGNE s,HOSPITALISATION h WHERE s.NUM_PATIENT=h.NUM_PATIENT;
CREATE VIEW MedServCount (NUM_MED,NBR) AS SELECT NUM_MED,COUNT(CODE_SERVICE) FROM MedServ GROUP BY NUM_MED;
SELECT NOM_EMP,PRENOM_EMP FROM EMPLOYE e, MedServCount m WHERE e.NUM_EMP=m.NUM_MED AND m.NBR=(SELECT COUNT(CODE_SERVICE) FROM SERVICE);